/* DATABASE USER ACCESS */
GRANT ALL ON TA_Hunter.* TO 'TA_Hunter'@'localhost' IDENTIFIED BY 'web_sys_dev_user';

/* DATABASE CREATION */
DROP DATABASE IF EXISTS TA_Hunter;
CREATE DATABASE TA_Hunter;
USE TA_Hunter;

/* TABLE CREATION */
DROP TABLE IF EXISTS users;
CREATE TABLE users(
	email VARCHAR(255) NOT NULL,
	firstName VARCHAR(255),
	lastName VARCHAR(255),
	isAdmin BOOL NOT NULL,
	isDispatcher BOOL NOT NULL,
	isDriver BOOL NOT NULL,
    isFirstTime BOOL NOT NULL,
	PRIMARY KEY(email)
);

DROP TABLE IF EXISTS courses;
CREATE TABLE courses(
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	name VARCHAR(255) NOT NULL,
	Dispatcher_code VARCHAR(50) NOT NULL UNIQUE,
	PRIMARY KEY(subj, crse)
);

DROP TABLE IF EXISTS passwords;
CREATE TABLE passwords(
	email VARCHAR(255) NOT NULL,
	password VARCHAR(255),
	PRIMARY KEY(email),
	FOREIGN KEY(email) REFERENCES users(email)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Drivers_courses;
CREATE TABLE Drivers_courses(
	email VARCHAR(255) NOT NULL,
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	PRIMARY KEY(email, subj, crse),
	FOREIGN KEY(email) REFERENCES users(email)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(subj, crse) REFERENCES courses(subj, crse)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Dispatchers_courses;
CREATE TABLE Dispatchers_courses(
	email VARCHAR(255) NOT NULL,
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	PRIMARY KEY(email, subj, crse),
	FOREIGN KEY(email) REFERENCES users(email)
		ON DELETE CASCADE
		ON UPDATE CASCADE,
	FOREIGN KEY(subj, crse) REFERENCES courses(subj, crse)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);

DROP TABLE IF EXISTS Dispatcher_Hours;
CREATE TABLE Dispatcher_Hours(
	email VARCHAR(255) NOT NULL,
	subj CHAR(4) NOT NULL,
	crse MEDIUMINT(3) UNSIGNED NOT NULL,
	week_day ENUM('SUNDAY','MONDAY','TUESDAY','WEDNESDAY','THURSDAY','FRIDAY','SATURDAY') NOT NULL,
	start_time TIME NOT NULL,
	end_time TIME NOT NULL,
	PRIMARY KEY(email, subj, crse, week_day),
	FOREIGN KEY(email, subj, crse) REFERENCES Dispatchers_courses(email, subj, crse)
		ON DELETE CASCADE
		ON UPDATE CASCADE
);
